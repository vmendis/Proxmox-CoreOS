variant: fcos
version: 1.3.0
storage:
  directories:
    - path: /var/cache/rpm-ostree-install

  files:
    # CRI-O DNF module
    - path: /etc/dnf/modules.d/cri-o.module
      mode: 0644
      overwrite: true
      contents:
        inline: |
          [cri-o]
          name=cri-o
          stream=1.27
          profiles=
          state=enabled

    # YUM repository for kubeadm, kubelet and kubectl
    - path: /etc/yum.repos.d/kubernetes.repo
      mode: 0644
      overwrite: true
      contents:
        inline: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          # gpgcheck=1  
          # repo_gpgcheck=1 this is fuckedup. https://github.com/grafana/agent/issues/5758 7.Feb.2024
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
            https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    # configuring automatic loading of br_netfilter on startup
    - path: /etc/modules-load.d/br_netfilter.conf
      mode: 0644
      overwrite: true
      contents:
        inline: br_netfilter

    # kernel module for cri-o
    - path: /etc/modules-load.d/crio-net.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          overlay
          br_netfilter


    # setting kernel parameters required by kubelet
    - path: /etc/sysctl.d/kubernetes.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          net.bridge.bridge-nf-call-iptables=1
          net.ipv4.ip_forward=1


    - path: /etc/hostname
      mode: 0644
      contents:
        inline: |
          brick
    - path: /etc/NetworkManager/system-connections/ens18.nmconnection
      mode: 0600
      contents:
        inline: |
          [connection]
          id="Wired connection 1"
          type=ethernet
          interface-name=ens18
          [ipv4]
          address1=192.168.1.51/24,192.168.1.1
          dns=8.8.8.8;8.8.4.4
          dns-search=
          may-fail=false
          method=manual

    # Example. Configuering a kernel tunable
    - path: /etc/sysctl.d/90-sysrq.conf
      contents:
        inline: |
          kernel.sysrq = 0

    # This script is run manually after the passes it's initial configueration
    - path: /var/tmp/setup.sh
      mode: 0777
      contents:
        inline: |
          #!/usr/bin/bash
          vi /etc/hostname
          vi /etc/NetworkManager/system-connections/ens18.nmconnection
          systemctl reboot
          #--------------------------
          rpm-ostree install cri-o kubelet kubeadm kubectl
          systemctl reboot
          #--------------------------
          modprobe overlay && modprobe br_netfilter
          systemctl reboot
          #--------------------------
          setenforce 0
          sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
          
          systemctl enable crio.service
          systemctl start crio.service
          systemctl status crio.service
          systemctl enable kubelet
          systemctl start kubelet
          systemctl status kubelet

          #--------------------------
          echo "KUBELET_EXTRA_ARGS=--cgroup-driver=systemd" | tee /etc/sysconfig/kubelet
          IPADDR="192.168.1.71"
          NODENAME=$(hostname -s)
          POD_CIDR="10.244.0.0/16"
          #--------------------------
          kubeadm init --control-plane-endpoint=$IPADDR  --apiserver-cert-extra-sans=$IPADDR  --pod-network-cidr=$POD_CIDR --node-name $NODENAME

    # ClusterConfiguration
    - path: /var/tmp/kubeadm-custom.yaml
      mode: 0777
      contents:
        inline: |
          apiVersion: kubeadm.k8s.io/v1beta3
          kind: ClusterConfiguration
          kubernetesVersion: v1.28.6
          controllerManager:
            extraArgs:
              flex-volume-plugin-dir: "/etc/kubernetes/kubelet-plugins/volume/exec"
          networking:
            podSubnet: 10.244.0.0/16
            serviceSubnet: 10.96.0.0/12 # change according to your requirements
          clusterName: kubernetes-dev


# As an example on how to do, I am setting the time zone
# In real life, it is better to keep servers on UTC to avoid issues related to adjusting clocks for
# daylight savings.
  links:
    - path: /etc/localtime
      target: ../usr/share/zoneinfo/America/New_York

passwd:
  users:
    - name: core
      password_hash: "$1$yoursalt$RW7qzat1/SKJxvrq4MRo5."
      ssh_authorized_keys:
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCS2n5eawz4UHNh3mBnTGvxZUsaWqZIq1nu0v9i0htXzHTjYxjz2Cn2SNf7U1orkzsMQO5QHkR5hBnK6ePnINcWpReEP8gisnXjEDC/Y4c5uvn0MxGHMeIKIhNWBbFBf4WuBOznp9DjNpoJd51I6LL5PvRQu533sZ+xgI0iIWpAj+CY0hFdIFNAzhjBe98hrPcQK151X+J+NNLMGwgVnHwE6MZm+R7Bh0eq7ST5Ro3I8i7DfmpIyMdgtc27gnk4hHk5VaDc85EcBwIzVAusH/M8biUJAM+1VAGibuqwjttkok2JM1oTVEdrrlGkJbWhifqYoYIUKT26W14+dHqcUGp1SYRa3TAZ/Szr7LvTucB2E2/mj4Cey1Gl2W+tZpydPrkASXZp1JDZTCHCLyb7+pBqGcSenVTI07WL1Kzxqw8892f+l8bZ+CHCjWnGWa8ge9VZmltJlDm0ZGw/dJk342VadtqtQczVSSH2p7cEdsMooIMnesOk6PgU3xQTtnkievk= bounty@fishtank
      home_dir: /home/core
      groups:
        - wheel
        - docker
      shell: /bin/bash

systemd:
  units:
# qemu-guest-agent
    - name: install-qemu-agent.service
      enabled: true
      contents: |
        [Unit]
        Description=Initial System Setup
        # We run after `systemd-machine-id-commit.service` to ensure that
        # `ConditionFirstBoot=true` services won't rerun on the next boot.
        After=systemd-machine-id-commit.service
        After=network-online.target
        # We run before `zincati.service` to avoid conflicting rpm-ostree
        # transactions.
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/rpm-ostree install qemu-guest-agent

        [Install]
        WantedBy=multi-user.target        

    - name: rpm-ostree-install@.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer %i with rpm-ostree
        Wants=network-online.target
        After=network-online.target
        Before=zincati.service
        ConditionPathExists=!/var/cache/rpm-ostree-install/%i.stamp
 
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/flock /var/cache/rpm-ostree-install/.lock -c "/usr/bin/rpm-ostree install --assumeyes --idempotent --reboot --allow-inactive %i | tee /var/cache/rpm-ostree-install/%i.stamp"
 
        [Install]
        WantedBy=multi-user.target
