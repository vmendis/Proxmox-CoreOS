WIP Notes. These will be beautified later on


From: https://vincentdeborger.be/blog/building-a-kubernetes-ready-fedora-coreos-image/

The idea is to create Kubernetes ready build image


Configueration Files

Link to yaml file:  https://github.com/vmendis/Proxmox-Fedora-CoreOS/blob/main/Kubernetes/bootstrap-kube-software.yaml

This yaml file requires transpiling to an Igntion config file. Use this online service: https://fcct.techoverflow.net/

I am using this ignition file which was created some time ago: https://github.com/vmendis/Proxmox-Fedora-CoreOS/blob/main/Kubernetes/bootstrap-kube-software.ign


I have shortned the github url so I can type it easily on CoreOS using free service: https://y.gy/4Vmj

Fedora CoreOS Setup:

Setup a VM on Proxmox for CoreOS
Boot from the CoreOS LiveCD
   -- Add image of console

cd /tmp
curl https://y.gy/4XmZ  -L -o bootstrap.ign

view bootstrap.ign    // Sanity check the ignition file

lsblk -a

sudo coreos-installer install /dev/sda --ignition-file  bootstrap.ign

sudo init 6

Access newly created CoreOS using ssh
   $ ssh -i ~/.ssh/core_os_id_rsa core@192.168.1.xx


Let the new server reboot few times.

When the IP number of the new server is visible in Proxmox GUI, it is good to go


Change IP number and hostname of the server

ssh onto the server
vi /etc/hostname                             
vi /etc/NetworkManager/system-connections/ens18.nmconnection
init 6

----------------------------------
Part 2 Kubernetes Setup

Installing CRI-O

rpm-ostree install cri-o

# Make sure to reboot to have layered package available
systemctl reboot

                  --  systemctl is-active crio      systemctl status crio.service

modprobe overlay && modprobe br_netfilter

# Kernel module should be loaded on every reboot
cat <<EOF > /etc/modules-load.d/crio-net.conf
overlay
br_netfilter
EOF

rpm-ostree install kubelet kubeadm kubectl

systemctl reboot

setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

systemctl start crio.service     / Not  systemctl enable --now cri-o ??
systemctl enable --now kubelet


echo "KUBELET_EXTRA_ARGS=--cgroup-driver=systemd" | tee /etc/sysconfig/kubelet


root@boooo:~# IPADDR="192.168.1.71"
root@boooo:~# NODENAME=$(hostname -s)
root@boooo:~# POD_CIDR="10.244.0.0/16"

kubeadm init --control-plane-endpoint=$IPADDR  --apiserver-cert-extra-sans=$IPADDR  --pod-network-cidr=$POD_CIDR --node-name $NODENAME

Exit root shell


kubectl cluster-info

kubectl get po -n kube-system
kubectl get --raw='/readyz?verbose'

kubectl get pods --all-namespaces
kubectl get pod -o=custom-columns=NAME:.metadata.name,STATUS:.status.phase,NODE:.spec.nodeName --all-namespaces


Install Calico


kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/tigera-operator.yaml
curl https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/custom-resources.yaml -O
vi custom-resources.yaml
   Modify cidr accordingly
kubectl create -f custom-resources.yaml


kubectl get po -n kube-system


you will see calico pods and running CoreDNS pods.     -- idont see these

  
Known Issues:

1. Warning about installing qemu agent

ssh -i ~/.ssh/core_os_id_rsa core@192.168.1.50
Fedora CoreOS 39.20240112.3.0
Tracker: https://github.com/coreos/fedora-coreos-tracker
Discuss: https://discussion.fedoraproject.org/tag/coreos

Last login: Mon Feb  5 03:45:31 2024 from 192.168.1.32
[systemd]
Failed Units: 1
  install-qemu-agent.service

When connecting to the FCOS serever using ssh, message about the failed unit is displayed.
However, the qemu agent has been installed and running. This can be seen on Proxmox as the
IP number of the FCOS is listed.


$ ps -aef|grep agent
root         933       1  0 03:42 ?        00:00:00 /usr/bin/qemu-ga --method=virtio-serial --path=/dev/virtio-ports/org.qemu.guest_agent.0 --blacklist= -F/etc/qemu-ga/fsfreeze-hook

Will try to fix this sometime as the functioanlity is not broken.

